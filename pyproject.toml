[tool.poetry]
name = "tunnrl-tbm-maintenance"
version = "0.1.0"
description = "Decision making in cutter changing on TBM excavation using reinforcement learning"
authors = ["Tom F. Hansen <tom.frode.hansen@gmail.com>", "Georg H. Erharter <erharter@tugraz.at>"]
license = "MIT"
readme = "README.md"
packages = [{include = "utils", from = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
scikit-learn = "^1.2.2"
mlflow = "^2.3.2"
hydra-core = "^1.3.2"
rich = "^13.3.5"
pydantic = "^1.10.7"
plotly = "^5.14.1"
tensorboard = "^2.13.0"
openpyxl = "^3.1.2"
optuna = "2.10.1"
gymnasium = "^0.28.1"
torch = "^2.0.1"
stable-baselines3 = "^2.0.0"
sb3-contrib = "^2.0.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.0.269"
black = "^23.3.0"
mypy = "^1.3.0"
ipdb = "^0.13.13"
pytest = "^7.3.1"
coverage = "^7.2.5"
pre-commit = "^3.3.2"
isort = "^5.12.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ipdb]
context = 10

[tool.black]
line-length = 88
exclude = '''
/(
	\.git
| \.hg
| \.mypy_cache
| \.tox
| \.venv
| _build
| buck-out
| build
)/
'''

[tool.ruff]
line-length = 88

[tool.mypy]
strict = false

[tool.coverage.report]
show_missing = true
fail_under = 5 # coverage will fail if over xxx % of functions are not covered


# export dependencies to a requirements.txt with:
# poetry export -f requirements.txt --output requirements.txt --without-hashes
